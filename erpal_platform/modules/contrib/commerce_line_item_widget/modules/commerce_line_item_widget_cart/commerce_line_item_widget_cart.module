<?php

/**
 * @file
 * Provide dynamic widget setting use in cart.
 */

/**
 * Implements hook_views_api().
 */
function commerce_line_item_widget_cart_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'commerce_line_item_widget_cart') . '/includes/views',
  );
}

/**
 * Implements hook_form_alter().
 */
function commerce_line_item_widget_cart_form_alter(&$form, &$form_state, $form_id) {

  // Add our own submit to have possibility to prepopulate fields in line item.
  if (strpos($form_id, 'commerce_cart_add_to_cart_form') !== FALSE) {
    $form['#submit'][] = 'commerce_line_item_widget_cart_form_submit';
  }
}

/**
 * Form submit handler: add the selected product to the cart.
 */
function commerce_line_item_widget_cart_form_submit($form, &$form_state) {

  // Check if line item already created.
  if (!empty($form_state['line_item']->line_item_id)) {

    // Take order type from line item.
    $order_wrapper = entity_metadata_wrapper('commerce_order', $form_state['line_item']->order_id);
    $order_bundle = $order_wrapper->getBundle();

    // Load widget settings from field "commerce_line_items".
    if ($order_bundle) {
      $settings = field_info_instance('commerce_order', 'commerce_line_items', $order_bundle);
      if ($settings['widget']['type'] == 'commerce_line_item_widget') {
        $widget_settings = $settings['widget']['settings'];

        // Load product from which we will prepopulate fields in line item.
        $product_id = $form_state['values']['product_id'];
        $product = commerce_product_load($product_id);

        // Sale price already calculated, in this case we shouldn't replace #
        // price field again.
        if (!empty($widget_settings[$form_state['line_item']->type]['product_type'][$product->type])) {
          if (!empty($widget_settings[$form_state['line_item']->type]['fields']['commerce_unit_price'])) {
            unset($widget_settings[$form_state['line_item']->type]['fields']['commerce_unit_price']);
          }
        }

        // Just set $input to empty array, as we don't need this.
        $input = array();

        // Prepopulate fields in line item from product in relation to settings
        // from commerce_line_items field settings.
        commerce_line_item_widget_pre_populate($widget_settings, $form_state['line_item'], $product, $input);
        commerce_line_item_save($form_state['line_item']);
      }
    }
  }
}